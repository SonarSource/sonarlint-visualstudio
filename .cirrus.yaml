env:
  ARTIFACTORY_URL: VAULT[development/kv/data/repox data.url]
  ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  ARTIFACTORY_PRIVATE_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_DEPLOY_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer
  ARTIFACTORY_DEPLOY_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa
  ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  # Use bash (instead of sh on linux or cmd.exe on windows)
  CIRRUS_SHELL: powershell

ec2_instance_definition: &INSTANCE_DEFINITION
  region: eu-central-1
  type: t3a.xlarge
  image: base-windows-dotnet-v*
  platform: windows

build_dotnet_task:
  ec2_instance:
    <<: *INSTANCE_DEFINITION
  env:
    APPDATA: C:\sonar-ci\AppData\Roaming
    ARTIFACTORY_PASSWORD: ${ARTIFACTORY_PRIVATE_PASSWORD}
    ARTIFACTORY_USER: ${ARTIFACTORY_PRIVATE_USERNAME}
    CIRRUS_WORKING_DIR: C:\sonar-ci
    LOCALAPPDATA: C:\sonar-ci\AppData\Local
    PATH: C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin;${PATH}
    SOLUTION_PATH: SonarLint.VisualStudio.Integration.sln
    SONARSOURCE_SNK_PATH: ${CIRRUS_WORKING_DIR}/SonarSource.snk
    SONARSOURCE_SNK: VAULT[development/team/languages/kv/data/strong_named_key data.SonarSourceSecret_snk]
    USERPROFILE: C:\sonar-ci
    SM_API_KEY: VAULT[development/team/sonarlint/kv/data/codesigning/2023-2025 data.apikey]
    SM_CERT: VAULT[development/team/sonarlint/kv/data/codesigning/2023-2025 data.cert]
    SM_CERT_FP: VAULT[development/team/sonarlint/kv/data/codesigning/2023-2025 data.cert_fp]
    SM_CLIENT_CERT_FILE_BASE64: VAULT[development/team/sonarlint/kv/data/codesigning/2023-2025 data.client_cert_file_base64]
    SM_CLIENT_CERT_FILE: ${CIRRUS_WORKING_DIR}/Certificate.pkcs12.p12
    SM_CLIENT_CERT_PASSWORD: VAULT[development/team/sonarlint/kv/data/codesigning/2023-2025 data.client_cert_password]
    SM_HOST: VAULT[development/team/sonarlint/kv/data/codesigning/2023-2025 data.host]
    SHOULD_SIGN: >
      if ($env:CIRRUS_BRANCH -eq "vn/cirrus-sign") {
        echo "true"
      } else {
        echo "false"
      }

  restore_snk_script: |
    # Restore SNK file from Vault
    echo "${SONARSOURCE_SNK}" | base64 -d > "${SONARSOURCE_SNK_PATH}"

  restore_codesigning_file_script: |
    # Restore sign cert file from Vault
    echo "${SM_CLIENT_CERT_FILE_BASE64}" | base64 -d > "${SM_CLIENT_CERT_FILE}"

  calculate_version_script: |
    [xml]$versionProps = Get-Content .\build\Version.props
    $sonarProjectVersion = $versionProps.Project.PropertyGroup.MainVersion
    $env:SONAR_PROJECT_VERSION=$sonarProjectVersion

  download_jar_dependencies_script:
    - msbuild.exe build\DownloadDependencies /p:VsVersion=17.0 /p:VsTargetVersion=2022

  dotnet_restore_script:
    - dotnet.exe restore "${SOLUTION_PATH}" --locked-mode

  build_solution_script:
    - msbuild.exe "${SOLUTION_PATH}" /p:VsVersion=17.0 /p:VsTargetVersion=2022 /p:SignArtifacts=${SHOULD_SIGN} /p:AssemblyOriginatorKeyFile=${SONARSOURCE_SNK_PATH} /p:DeployExtension=false /p:Sha1=${CI_COMMIT_SHA} /p:BuildNumber=${CIRRUS_BUILD_ID}

  sign_artifact_script:
    - nuget.exe sign "${CIRRUS_WORKING_DIR}\sonarlint-visualstudio\binaries\SonarLint.VSIX-${SONAR_PROJECT_VERSION}-2022.vsix" -HashAlgorithm SHA256 -CertificateFingerprint $(SM_CERT_FP) -Timestamper http://timestamp.digicert.com -TimestampHashAlgorithm SHA256

dogfood_task:
  depends_on:
    - build_dotnet
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")
  ec2_instance:
    <<: *INSTANCE_DEFINITION
  env:
    AWS_ACCESS_KEY_ID: VAULT[development/aws/sts/downloads access_key]
    AWS_SECRET_ACCESS_KEY: VAULT[development/aws/sts/downloads secret_key]
    AWS_SESSION_TOKEN: VAULT[development/aws/sts/downloads security_token]
    AWS_DEFAULT_REGION: eu-central-1
    CIRRUS_SHELL: bash
    VERSION: 8.3.0.98093
  dogfood_script: |
    curl -L0 "https://github.com/madskristensen/PrivateGalleryCreator/releases/download/1.0.64/PrivateGalleryCreator.zip" -o PrivateGalleryCreator.zip
    unzip PrivateGalleryCreator.zip
    curl -u$ARTIFACTORY_PRIVATE_USERNAME:$ARTIFACTORY_PRIVATE_PASSWORD https://repox.jfrog.io/artifactory/sonarsource-public-builds/org/sonarsource/sonarlint/visualstudio/sonarlint-visualstudio/$VERSION/SonarLint.VSIX-$VERSION-2022.vsix -o SonarLint.VSIX-$VERSION-2022.vsix
    mkdir -p /tmp/dogfood/$VERSION
    ./PrivateGalleryCreator.exe --input=. --terminate --source="https://binaries.sonarsource.com/SonarLint-for-VisualStudio/dogfood/$VERSION/" --output=/tmp/dogfood/feed.xml
    cp SonarLint.VSIX-$VERSION-2022.vsix /tmp/dogfood/$VERSION/
    .cirrus/publish-dogfood-site.sh /tmp/dogfood