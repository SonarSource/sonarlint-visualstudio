<UserControl x:Class="SonarLint.VisualStudio.Education.Commands.RuleHelpUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vsTheming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0" 
             
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" >
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../UI/SeverityImages.xaml" />
                <ResourceDictionary Source="../UI/TypeImages.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Defines the standard set of style used by the document elements -->
            <Style TargetType="ScrollViewer" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ScrollViewerStyleKey}}" >
                <Setter Property="Margin" Value="0, 0, 0, 0"/>
                <Setter Property="Padding" Value="0, 0, 0, 0"/>
            </Style>
            <Style TargetType="TabControl">
                <Setter Property="Margin" Value="0, 0, 0, 0"/>
                <Setter Property="Padding" Value="0, 0, 0, 0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ScrollViewer HorizontalScrollBarVisibility="Auto"  VerticalScrollBarVisibility="Hidden" >
                                    <TabPanel x:Name="HeaderPanel"
                                              Panel.ZIndex ="1" 
                                              KeyboardNavigation.TabIndex="1"
                                              Grid.Column="0"
                                              Grid.Row="0"
                                              Margin="2,2,2,0"
                                              IsItemsHost="true"/>
                                </ScrollViewer>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Margin="-10,0,0,0"
                                                  ContentSource="SelectedContent" 
                                                  Grid.Row="1"
                                                  Focusable="True"
                                                  KeyboardNavigation.TabIndex="3"
                                                  AutomationProperties.Name="{Binding ElementName=Root, Path=StackTrace}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static vsshell:VsFonts.CaptionFontFamilyKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUIBackgroundKey}}" />
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment122PercentFontSizeKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                <Setter Property="Margin" Value="-2,-2,0,0" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlsFocusVisualStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderThickness="0" Margin="0">
                                </Border>
                                <ContentPresenter  Grid.Row="0" x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <!-- the line under the text to indicate that this label is selected -->
                                <Rectangle
                            x:Name="_underline"
                            Grid.Row="1"
                            Height="3"
                            Visibility="Collapsed"
                            Width="{Binding ActualWidth, ElementName=contentPresenter}"
                            HorizontalAlignment="Center"
                            Fill="{DynamicResource {x:Static vsTheming:CommonDocumentColors.InnerTabInactiveHoverTextBrushKey}}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="_underline" Value="Visible" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsTheming:CommonDocumentColors.InnerTabSelectedTextBrushKey }}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsTheming:CommonDocumentColors.InnerTabTextFocusedBrushKey}}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsTheming:CommonDocumentColors.InnerTabTextHoverBrushKey }}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="FlowDocument">
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.EnvironmentFontSizeKey}}"/>
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static vsshell:VsFonts.EnvironmentFontFamilyKey}}"/>

                <!-- Optimise whitespace and word-breaks for readability -->
                <Setter Property="IsOptimalParagraphEnabled" Value="True" />
                <Setter Property="IsHyphenationEnabled" Value="True" />

                <!-- Reduce blurriness of font outlines. -->
                <!-- Note: same settings as for the Help About box. Also, changes to these properties when
                     debugging are not picked up immediately - you need to recompile to see the difference. -->
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            </Style>
            <Style x:Key="Bordered_Section" TargetType="Section">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.PanelBorderKey}}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Padding" Value="5, 0, 5, 0"/>
                <Setter Property="Margin" Value="0, 5, 0, 5"/>
            </Style>
            <Style x:Key="Pre_Section" TargetType="Section">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.PanelBorderKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.CaptionTextKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.InactiveCaptionKey}}"/>
                <Setter Property="FontFamily" Value="Courier New"/>
                <Setter Property="Margin" Value="10,0,0,0" />
                <Setter Property="Padding" Value="10,0,0,0" />
            </Style>
            <Style x:Key="Blockquote_Section" TargetType="Section">
                <Setter Property="Margin" Value="12,0,0,0"/>
                <Setter Property="FontStyle" Value="Italic"/>
            </Style>
            <Style x:Key="Title_Paragraph" TargetType="Paragraph">
                <Setter Property="TextAlignment" Value="Left" />
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static vsshell:VsFonts.CaptionFontFamilyKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment155PercentFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment155PercentFontWeightKey}}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Margin" Value="0,10,0,5" />
            </Style>
            <Style x:Key="SubtitleElement_Span" TargetType="Span">
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.CaptionFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="BaselineAlignment" Value="Center" />
            </Style>
            <Style x:Key="SubtitleElement_Image" TargetType="Image">
                <Setter Property="Margin" Value="0,0,3,0" />
                <Setter Property="Stretch" Value="None" />
                <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
            </Style>
            <Style x:Key="Heading1_Paragraph" TargetType="Paragraph">
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static vsshell:VsFonts.CaptionFontFamilyKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment155PercentFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment155PercentFontWeightKey}}"/>
                <Setter Property="Margin" Value="0,10,0,5" />
            </Style>
            <Style x:Key="Heading2_Paragraph" TargetType="Paragraph">
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static vsshell:VsFonts.CaptionFontFamilyKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment155PercentFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment155PercentFontWeightKey}}"/>
                <Setter Property="Margin" Value="0,10,0,5" />
            </Style>
            <Style x:Key="Heading3_Paragraph" TargetType="Paragraph">
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static vsshell:VsFonts.CaptionFontFamilyKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment133PercentFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment133PercentFontWeightKey}}"/>
                <Setter Property="Margin" Value="0,10,0,5" />
            </Style>
            <Style x:Key="Heading4_Paragraph" TargetType="Paragraph">
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static vsshell:VsFonts.CaptionFontFamilyKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment122PercentFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment122PercentFontWeightKey}}"/>
                <Setter Property="Margin" Value="0,10,0,5" />
            </Style>
            <Style x:Key="Heading5_Paragraph" TargetType="Paragraph">
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static vsshell:VsFonts.CaptionFontFamilyKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment111PercentFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment111PercentFontWeightKey}}"/>
                <Setter Property="Margin" Value="0,10,0,5" />
            </Style>
            <Style x:Key="Heading6_Paragraph" TargetType="Paragraph">
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static vsshell:VsFonts.CaptionFontFamilyKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment111PercentFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment111PercentFontWeightKey}}"/>
                <Setter Property="Margin" Value="0,10,0,5" />
            </Style>
            <Style x:Key="Table" TargetType="Table">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.PanelBorderKey}}"/>
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Padding" Value="1" />
            </Style>
            <Style x:Key="TableHeaderRowGroup" TargetType="TableRowGroup">
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static vsshell:VsFonts.EnvironmentBoldFontWeightKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.InactiveCaptionKey}}" />
            </Style>
            <Style x:Key="TableHeaderCell" TargetType="TableCell">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.PanelBorderKey}}"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="Padding" Value="8,5,5,8" />
            </Style>
            <Style x:Key="TableBodyCell" TargetType="TableCell">
                <Setter Property="Padding" Value="8,5,5,8" />
            </Style>
            <Style x:Key="TableBodyCellAlternateRow" TargetType="TableCell">
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.InfoBackgroundKey}}" />
                <Setter Property="Padding" Value="8,5,5,8" />
            </Style>
            <Style x:Key="UnorderedList" TargetType="List">
                <Setter Property="MarkerStyle" Value="Circle" />
                <Setter Property="Margin" Value="2" />
            </Style>
            <Style x:Key="OrderedList" TargetType="List">
                <Setter Property="MarkerStyle" Value="Decimal" />
                <Setter Property="Margin" Value="2" />
            </Style>
            <Style x:Key="Code_Span" TargetType="Span">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.InfoTextKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.InfoBackgroundKey}}" />
                <Setter Property="FontFamily" Value="Courier New" />
                <Setter Property="FontSize" Value="{DynamicResource {x:Static vsshell:VsFonts.Environment90PercentFontSizeKey}}"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <FlowDocumentScrollViewer x:Name="docViewer" Hyperlink.RequestNavigate="HandleRequestNavigate">
        <FlowDocument>
            
            <!-- Design-time only control to check the embedding and rendering of the images.
                 The d: prefix means this won't appear in the runtime build. -->
            <d:BlockUIContainer>
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource blockerDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource criticalDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource majorDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource minorDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource infoDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />

                    <Image Source="{StaticResource vulnerabilityDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource bugDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource codeSmellDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource hotspotDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource hotspotHighDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource hotspotLowDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                    <Image Source="{StaticResource hotspotMediumDrawingImage}" Style="{DynamicResource SubtitleElement_Image}" />
                </StackPanel>
            </d:BlockUIContainer>
            
            <Paragraph>
                For each Sonar rule, we provide code samples and offer guidance on a fix. Even more importantly, we also tell you why.
            </Paragraph>
            <Paragraph>
                To see the help for a specific Sonar rule, view the issue in the
                    <Span Style="{DynamicResource Code_Span}" >Error List</Span>, then either:

            </Paragraph>
            <List MarkerStyle="Circle">
                <ListItem>
                    <Paragraph>Click on the hyperlink in the
                        <Span Style="{DynamicResource Code_Span}">Code</Span> column
                    </Paragraph>
                </ListItem>
            </List>
            <Paragraph>or</Paragraph>
            <List MarkerStyle="Circle">
                <ListItem>
                    <Paragraph>Select the appropriate row in the
                        <Span Style="{DynamicResource Code_Span}">Error List</Span> column, then
                    </Paragraph>
                </ListItem>
                <ListItem>
                    <Paragraph>Select
                        <Span Style="{DynamicResource Code_Span}">Show Error Help</Span> from the context menu
                    </Paragraph>
                </ListItem>
            </List>
            <Paragraph>The rule help will be shown in this tool window.</Paragraph>
            <Paragraph>By default, this tool window is docked with the
                <Italic>Solution Explorer</Italic>. However, you can move it any where you like, just like any other tool window.
            </Paragraph>
            <Paragraph TextAlignment="Left">You can browse all available rules at
                <Hyperlink NavigateUri="https://rules.sonarsource.com/">https://rules.sonarsource.com</Hyperlink>
            </Paragraph>
        </FlowDocument>
    </FlowDocumentScrollViewer>
</UserControl>
