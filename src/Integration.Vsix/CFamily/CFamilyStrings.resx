<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ERROR_ProcessRunner_ExeNotFound" xml:space="preserve">
    <value>Execution failed. The specified executable does not exist: {0}</value>
  </data>
  <data name="MSG_CmdLine_SensitiveCmdLineArgsAlternativeText" xml:space="preserve">
    <value>&lt;sensitive data removed&gt;</value>
  </data>
  <data name="MSG_ProessRunner_ProcessKilled" xml:space="preserve">
    <value>Process {0} was killed.</value>
  </data>
  <data name="MSG_ExecutingFile" xml:space="preserve">
    <value>Executing file {0}
  Args: {1}
  Working directory: {2}
  Process id: {3}</value>
  </data>
  <data name="MSG_ExecutionCancelled" xml:space="preserve">
    <value>Execution cancelled.</value>
  </data>
  <data name="MSG_ExecutionExitCode" xml:space="preserve">
    <value>Process returned exit code {0}</value>
  </data>
  <data name="MSG_Prefix_DEBUG" xml:space="preserve">
    <value>DEBUG: </value>
  </data>
  <data name="MSG_Prefix_ERROR" xml:space="preserve">
    <value>ERROR: </value>
  </data>
  <data name="MSG_Prefix_WARN" xml:space="preserve">
    <value>WARNING: </value>
  </data>
  <data name="MSG_ReproducerSaved" xml:space="preserve">
    <value>Reproducer file saved at: {0} </value>
  </data>
  <data name="MSG_RequestConfigSaved" xml:space="preserve">
    <value>Request config saved at: {0} </value>
  </data>
  <data name="MSG_Runner_OverwritingEnvVar" xml:space="preserve">
    <value>Overwriting the value of environment variable '{0}'. Old value: {1}, new value: {2}</value>
  </data>
  <data name="MSG_Runner_SettingEnvVar" xml:space="preserve">
    <value>Setting environment variable '{0}'. Value: {1}</value>
  </data>
  <data name="ReproCmd_DocumentIsAnalyzable" xml:space="preserve">
    <value>Active document can be analyzed by the CFamily analyzer: {0}</value>
  </data>
  <data name="ReproCmd_DocumentIsNotAnalyzable" xml:space="preserve">
    <value>Cannot run SonarLint CFamily reproducer - the active document is not analyzable by the CFamily analyzer: {0}</value>
  </data>
  <data name="ReproCmd_Error_Execute" xml:space="preserve">
    <value>Error executing the SonarLint CFamily reproducer command:
  Error: {0}</value>
  </data>
  <data name="ReproCmd_Error_QueryStatus" xml:space="preserve">
    <value>Error in calculating whether the SonarLint CFamily reproducer command is available:
  Error: {0}</value>
  </data>
  <data name="ReproCmd_ExecutingReproducer" xml:space="preserve">
    <value>Calling the SonarLint CFamily reproducer...</value>
  </data>
  <data name="ReproCmd_NoActiveDocument" xml:space="preserve">
    <value>Cannot run SonarLint CFamily reproducer - no active document.</value>
  </data>
  <data name="MSG_PchSaved" xml:space="preserve">
    <value>Refreshing PCH file for {0}. PCH file location: {1}</value>
  </data>
  <data name="ERROR_CreatingConfig" xml:space="preserve">
    <value>Error retrieving configuration. File: {0}, Error: {1}</value>
  </data>
  <data name="MSG_UnableToCreateConfig" xml:space="preserve">
    <value>Unable to retrieve the configuration for file '{0}'.
    Check the file is part of a supported project type in the current solution.</value>
  </data>
  <data name="MSG_UnableToLocateSubProcessExe" xml:space="preserve">
    <value>Unable to locate the CFamily analyzer exe</value>
  </data>
  <data name="ERROR_InvalidCompilationEntry" xml:space="preserve">
    <value>Invalid compilation database entry. Either Command or Arguments must be supplied, but not both.</value>
  </data>
</root>