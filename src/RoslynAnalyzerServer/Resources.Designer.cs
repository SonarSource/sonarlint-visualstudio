//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SonarLint.VisualStudio.RoslynAnalyzerServer {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "18.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SonarLint.VisualStudio.RoslynAnalyzerServer.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content length exceeded. Received {0} bytes, max allowed: {1} bytes..
        /// </summary>
        internal static string BodyLengthExceeded {
            get {
                return ResourceManager.GetString("BodyLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many concurrent requests. Max allowed {0}..
        /// </summary>
        internal static string ConcurrentRequestsExceeded {
            get {
                return ResourceManager.GetString("ConcurrentRequestsExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location {0}.
        /// </summary>
        internal static string DefaultSecondaryLocationTitleTemplate {
            get {
                return ResourceManager.GetString("DefaultSecondaryLocationTitleTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error handling request: {0}..
        /// </summary>
        internal static string HttpRequestFailed {
            get {
                return ResourceManager.GetString("HttpRequestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The analysis request timed out after {0} ms..
        /// </summary>
        internal static string HttpRequestTimedOut {
            get {
                return ResourceManager.GetString("HttpRequestTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt {0} to start server on port {1} failed due to {2}..
        /// </summary>
        internal static string HttpServerAttemptFailed {
            get {
                return ResourceManager.GetString("HttpServerAttemptFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server stopped and resources disposed..
        /// </summary>
        internal static string HttpServerDisposed {
            get {
                return ResourceManager.GetString("HttpServerDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start server after {0} attempts..
        /// </summary>
        internal static string HttpServerFailedToStartAttempts {
            get {
                return ResourceManager.GetString("HttpServerFailedToStartAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal server error {0}..
        /// </summary>
        internal static string HttpServerFailure {
            get {
                return ResourceManager.GetString("HttpServerFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Http Server.
        /// </summary>
        internal static string HttpServerLogContext {
            get {
                return ResourceManager.GetString("HttpServerLogContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server did not start as it was already started or disposed..
        /// </summary>
        internal static string HttpServerNotStarted {
            get {
                return ResourceManager.GetString("HttpServerNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server started listening..
        /// </summary>
        internal static string HttpServerStarted {
            get {
                return ResourceManager.GetString("HttpServerStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Staring http server for roslyn analysis....
        /// </summary>
        internal static string HttpServerStarting {
            get {
                return ResourceManager.GetString("HttpServerStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load class {0} from {1}: {2}.
        /// </summary>
        internal static string RoslynAnalysisAnalyzerClassLoaderFailedToLoad {
            get {
                return ResourceManager.GetString("RoslynAnalysisAnalyzerClassLoaderFailedToLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load analyzer {0}: {1}.
        /// </summary>
        internal static string RoslynAnalysisAnalyzerLoaderFailedToLoad {
            get {
                return ResourceManager.GetString("RoslynAnalysisAnalyzerLoaderFailedToLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzer Loader.
        /// </summary>
        internal static string RoslynAnalysisAnalyzerLoaderLogContext {
            get {
                return ResourceManager.GetString("RoslynAnalysisAnalyzerLoaderLogContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration.
        /// </summary>
        internal static string RoslynAnalysisConfigurationLogContext {
            get {
                return ResourceManager.GetString("RoslynAnalysisConfigurationLogContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No active rules loaded for language {0}.
        /// </summary>
        internal static string RoslynAnalysisConfigurationNoActiveRules {
            get {
                return ResourceManager.GetString("RoslynAnalysisConfigurationNoActiveRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No analyzers loaded for language {0}.
        /// </summary>
        internal static string RoslynAnalysisConfigurationNoAnalyzers {
            get {
                return ResourceManager.GetString("RoslynAnalysisConfigurationNoAnalyzers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analysis.
        /// </summary>
        internal static string RoslynAnalysisLogContext {
            get {
                return ResourceManager.GetString("RoslynAnalysisLogContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roslyn.
        /// </summary>
        internal static string RoslynLogContext {
            get {
                return ResourceManager.GetString("RoslynLogContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QuickFix.
        /// </summary>
        internal static string RoslynQuickFixLogContext {
            get {
                return ResourceManager.GetString("RoslynQuickFixLogContext", resourceCulture);
            }
        }
    }
}
