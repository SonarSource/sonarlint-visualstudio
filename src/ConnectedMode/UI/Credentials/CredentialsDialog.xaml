<Window x:Class="SonarLint.VisualStudio.ConnectedMode.UI.Credentials.CredentialsDialog"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:vsShell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
                         xmlns:res="clr-namespace:SonarLint.VisualStudio.ConnectedMode.UI.Resources"
                         xmlns:ui="clr-namespace:SonarLint.VisualStudio.ConnectedMode.UI"
                         Title="{x:Static res:UiResources.CredentialsDialogTitle}" 
                         HorizontalAlignment="Center"
                         SizeToContent="WidthAndHeight"
                         ResizeMode="NoResize"
                         MinWidth="750" MaxWidth="750"
                         MinHeight="500" MaxHeight="500"
                         Icon="pack://application:,,,/SonarLint.VisualStudio.ConnectedMode;component/UI/Resources/sonarlint_32px.ico"
                         xmlns:converters="clr-namespace:SonarLint.VisualStudio.Core.WPF;assembly=SonarLint.VisualStudio.Core"
                         xmlns:vsimagecatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
                         xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
                         Background="{DynamicResource {x:Static vsShell:VsBrushes.ComboBoxBackgroundKey}}"
                         FontSize="{DynamicResource {x:Static vsShell:VsFonts.Environment122PercentFontSizeKey}}"    
                         FontFamily="{DynamicResource {x:Static vsShell:VsFonts.EnvironmentFontFamilyKey}}"
                         x:Name="This">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SonarLint.VisualStudio.ConnectedMode;component/UI/Resources/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible"/>
        </ResourceDictionary>
    </Window.Resources>

    <Grid DataContext="{Binding ElementName=This, Path=ViewModel}" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" VerticalAlignment="Center" Margin="0, 20, 0, 0">
            <Run Text="{x:Static res:UiResources.AuthenticationDescription}" />
            <InlineUIContainer Style="{StaticResource ConnectionInfoInlineWrapper}">
                <ui:ConnectionInfoComponent ConnectionInfo="{Binding Path=Connection}"/>
            </InlineUIContainer>
        </TextBlock>

        <Grid Grid.Row="1" Margin="0,50,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static res:UiResources.AuthenticationTypeLabel}" VerticalAlignment="Center" Margin="0,0,10,0"/>
            <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Path=AuthenticationType, Mode=OneWay}" 
                      SelectedItem="{Binding Path=SelectedAuthenticationType, NotifyOnSourceUpdated=True}"
                      Height="30" VerticalContentAlignment="Center"  Background="White" SourceUpdated="AuthenticationTypeCombobox_OnSourceUpdated"/>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static res:UiResources.TokenLabel}" VerticalAlignment="Center" Margin="0,15,10,0"
                       Visibility="{Binding  Path=IsTokenAuthentication, Converter={StaticResource TrueToVisibleConverter}}"/>
            <Grid Grid.Row="1" Grid.Column="1" Margin="0,15,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShouldTokenBeFilled}" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource InvalidText}"></Setter>
                                    <Setter Property="BorderThickness" Value="1"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <PasswordBox Margin="0" Visibility="{Binding  Path=IsTokenAuthentication, Converter={StaticResource TrueToVisibleConverter}}"
                                 x:Name="TokenBox" PasswordChanged="TokenPasswordBox_OnPasswordChanged"/>
                </Border>
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="5,0,0,0">
                    <TextBlock VerticalAlignment="Center">
                        <!-- NavigateUri has to be filled, for the RequestNavigate to be triggered. The real Uri is calculated in the ViewModel --> 
                        <Hyperlink NavigateUri="https://sonarcloud.io/account/security" RequestNavigate="GenerateTokenHyperlink_Navigate">Generate</Hyperlink>
                    </TextBlock>
                    <imaging:CrispImage Width="16" Height="16" Margin="2,5,0,0" Cursor="Hand" Moniker="{x:Static vsimagecatalog:KnownMonikers.Link}"
                                        MouseLeftButtonDown="GenerateLinkIcon_MouseLeftButtonDown"/>
                </StackPanel>
            </Grid>


            <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static res:UiResources.UsernameLabel}" VerticalAlignment="Center" Margin="0,15,10,0"
                       Visibility="{Binding  Path=IsCredentialsAuthentication, Converter={StaticResource TrueToVisibleConverter}}"/>
            <Border  Grid.Row="1" Grid.Column="1" Margin="0,15,0,0">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShouldUsernameBeFilled}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource InvalidText}"></Setter>
                                <Setter Property="BorderThickness" Value="1"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <TextBox Text="{Binding Path=Username, UpdateSourceTrigger=PropertyChanged}" Margin="0"
                         Visibility="{Binding  Path=IsCredentialsAuthentication, Converter={StaticResource TrueToVisibleConverter}}"/>
            </Border>

            <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static res:UiResources.PasswordLabel}" VerticalAlignment="Center" Margin="0,5,10,0"
                       Visibility="{Binding  Path=IsCredentialsAuthentication, Converter={StaticResource TrueToVisibleConverter}}"/>
            <Border Grid.Row="2" Grid.Column="1" Margin="0,5,0,0">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShouldPasswordBeFilled}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource InvalidText}"></Setter>
                                <Setter Property="BorderThickness" Value="1"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <PasswordBox x:Name="PasswordBox" Margin="0" Visibility="{Binding  Path=IsCredentialsAuthentication, Converter={StaticResource TrueToVisibleConverter}}"
                             PasswordChanged="PasswordBox_OnPasswordChanged"/>
            </Border>
        </Grid>

        <ui:WarningMessage Grid.Row="2" Grid.Column="0" Margin="0,5" WarningText="{x:Static res:UiResources.DeprecatedAuthenticationTypeDescription}"
                    Visibility="{Binding  Path=IsCredentialsAuthentication, Converter={StaticResource TrueToVisibleConverter}}" />

        <Grid Grid.Row="3" HorizontalAlignment="Right" Margin="0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Button x:Name="ConfirmationBtn" Grid.Column="0" Content="{x:Static res:UiResources.OkButton}" IsDefault="True" IsEnabled="{Binding Path=IsConfirmationEnabled}"
                    Click="OkButton_OnClick"/>
            <Button Grid.Column="1" Content="{x:Static res:UiResources.CancelButton}" Margin="10,0" IsCancel="True"/>
        </Grid>
    </Grid>
</Window>
