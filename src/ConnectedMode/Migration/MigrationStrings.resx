<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cleaner_RemovingSettings" xml:space="preserve">
    <value>[Migration] Removing {0} settings from file...</value>
  </data>
  <data name="CancelTokenFailure_NormalLog" xml:space="preserve">
    <value>[Migration] Migration cancelled by user</value>
  </data>
  <data name="CancelTokenFailure_VerboseLog" xml:space="preserve">
    <value>[MigrationWizardXaml] Migration cancelled by user: {0}</value>
  </data>
  <data name="Process_CheckingFiles" xml:space="preserve">
    <value>[Migration] Checking files for Connected Mode settings...</value>
  </data>
  <data name="Process_CountOfFilesToCheck" xml:space="preserve">
    <value>[Migration] Number of files to check: {0}</value>
  </data>
  <data name="Process_DeletingSonarLintFolder" xml:space="preserve">
    <value>[Migration] Deleting the legacy .sonarlint...</value>
  </data>
  <data name="ErrorDuringMigation_NormalLog" xml:space="preserve">
    <value>[Migration] Error during migration: {0}
  Run migration again with verbose logging enabled for more information.</value>
  </data>
  <data name="ErrorDuringMigation_VerboseLog" xml:space="preserve">
    <value>[MigrationWizardXaml] Error during migration: {0}</value>
  </data>
  <data name="Process_Finished" xml:space="preserve">
    <value>[Migration] Finished ConnectedMode migration.</value>
  </data>
  <data name="Process_GettingFiles" xml:space="preserve">
    <value>[Migration] Getting list of files to check...</value>
  </data>
  <data name="Url_LearnMoreUrl" xml:space="preserve">
    <value>https://github.com/SonarSource/sonarlint-visualstudio/wiki/migrate-connected-mode-to-v7</value>
  </data>
  <data name="MigrationPrompt_LearnMoreButton" xml:space="preserve">
    <value>Learn more</value>
  </data>
  <data name="MigrationPrompt_Message" xml:space="preserve">
    <value>SonarLint: You're using an outdated Connected Mode configuration format. Please migrate.</value>
  </data>
  <data name="MigrationPrompt_MigrateButton" xml:space="preserve">
    <value>Migrate configuration</value>
  </data>
  <data name="Process_ProcessingNewBinding" xml:space="preserve">
    <value>[Migration] Creating new binding configuration...</value>
  </data>
  <data name="Process_SavingFiles" xml:space="preserve">
    <value>[Migration] Saving files...</value>
  </data>
  <data name="Process_SkippingChecking" xml:space="preserve">
    <value>[Migration] Skipping checking files: no files were found that could contain Connected Mode settings.</value>
  </data>
  <data name="Process_Starting" xml:space="preserve">
    <value>[Migration] Starting Connected Mode migration...</value>
  </data>
  <data name="Process_CheckedFile_Changed" xml:space="preserve">
    <value>[Migration]   - file will be updated</value>
  </data>
  <data name="Process_CheckedFile_Unchanged" xml:space="preserve">
    <value>[Migration]   - no changes</value>
  </data>
  <data name="Process_CheckingFile" xml:space="preserve">
    <value>[Migration] Checking file {0} of {1}: {2}</value>
    <comment>{X} of {Y:} {filename}</comment>
  </data>
  <data name="Process_NumberOfChangedFiles" xml:space="preserve">
    <value>[Migration] Number of files to modify: {0}</value>
  </data>
  <data name="Process_ListChangedFile" xml:space="preserve">
    <value>[Migration]  - {0}</value>
  </data>
  <data name="MigrationPrompt_AlreadyConnected_Message" xml:space="preserve">
    <value>SonarLint: You have both old and new connected mode settings. Please Migrate again to clean up the old settings</value>
  </data>
  <data name="Wizard_Progress_Cancelled" xml:space="preserve">
    <value>Migration cancelled</value>
  </data>
  <data name="Wizard_Progress_Error" xml:space="preserve">
    <value>Error during migration. See the Output Window for more information.</value>
  </data>
  <data name="Url_TfvcHelp" xml:space="preserve">
    <value>https://github.com/SonarSource/sonarlint-visualstudio/wiki/migrate-connected-mode-to-v7#additional-notes-for-tfvc-users</value>
  </data>
  <data name="VSFileSystem_FailedToCheckOutFilesForEditing" xml:space="preserve">
    <value>Failed to check out files for editing. Error flags: {0}</value>
    <comment>Output window message showing the tagVSQueryEditResultFlags enum value(s)</comment>
  </data>
  <data name="VSFileSystem_FailedToCheckOutFilesForSave" xml:space="preserve">
    <value>Failed to check out files for saving. Error code: {0}</value>
    <comment>Output window message showing the tagVSQuerySaveResult enum value</comment>
  </data>
  <data name="VSFileSystem_Error_FailedToCheckOutFile" xml:space="preserve">
    <value>Failed to check out file for editing: {0}</value>
    <comment>Error message displayed in the UI if a file can't be checked out</comment>
  </data>
  <data name="VsFileSystem_Error_FailedToCheckOutFolderForDeletion" xml:space="preserve">
    <value>Failed to check out folder contents for deletion: {0}</value>
  </data>
</root>