<p>This rule reports the methods of React component classes which are neither used nor React lifecycle methods. Note that this rule checks only the
scope of a component class, which means that issues will be raised on the methods that are only used outside of the class.</p>
<p>Methods that are never executed are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of
the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.</p>
<p>React encourages data-driven components. To modify a child component, re-render it with new <code>props</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class Profile extends React.Component {
  render(props) {
    return &lt;h1&gt;{ props.name }&lt;/h1&gt;;
  }

  getDefaultName() { // Noncompliant, this method is never used and is a dead code
    return 'John Smith';
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
class Profile extends React.Component {
  render(props) {
    return &lt;h1&gt;{ props.name || getDefaultName() }&lt;/h1&gt;;
  }

  getDefaultName() {
    return 'John Smith';
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://reactjs.org/docs/components-and-props.html">Components and Props</a> - React Documentation </li>
</ul>