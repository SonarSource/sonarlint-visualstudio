<p>It makes little sense to create an extension method when it is possible to just add that method to the class itself.</p>
<p>This rule raises an issue when an extension is declared in the same namespace as the class it is extending.</p>
<h2>Noncompliant Code Example</h2>
<pre>
namespace MyLibrary
{
    public class Foo
    {
        // ...
    }

    public static class MyExtensions
    {
        public static void Bar(this Foo a) // Noncompliant
        {
            // ...
        }
    }
}
</pre>
<h2>Compliant Solution</h2>
<p>Using separate namespace:</p>
<pre>
namespace MyLibrary
{
    public class Foo
    {
        // ...
    }
}

namespace Helpers
{
    public static class MyExtensions
    {
        public static void Bar(this Foo a)
        {
            // ...
        }
    }
}
</pre>
<p>Merging the method in the class:</p>
<pre>
namespace MyLibrary
{
    public class Foo
    {
        // ...
        public void Bar()
        {
            // ...
        }
    }
}
</pre>
<h2>Exceptions</h2>
<ul>
  <li> Extension methods added for clases decorated with <code>System.CodeDom.Compiler.GeneratedCodeAttribute</code> attribute. </li>
</ul>