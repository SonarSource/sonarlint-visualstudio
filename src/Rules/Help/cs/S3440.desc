<p>There’s no point in checking a variable against the value you’re about to assign it. Save the cycles and lines of code, and simply perform the
assignment.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (x != a)  // Noncompliant; why bother?
{
    x = a;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
x = a;
</pre>
<h2>Exceptions</h2>
<p>Properties and checks inside setters are excluded from this rule because they could have side effects and removing the check could lead to
undesired side effects.</p>
<pre>
if (MyProperty != a)
{
    MyProperty = a; // Compliant because the setter could be expensive call
}
</pre>
<pre>
private int myField;
public int SomeProperty
{
    get
    {
        return myField;
    }
    set
    {
        if (myField != value)
        {
            myField = value;
        }
    }
}
</pre>