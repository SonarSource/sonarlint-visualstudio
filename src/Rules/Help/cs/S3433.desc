<p>A method is detected as test method if marked with one of the following attributes <code>[TestMethod]</code> or <code>[DataTestMethod]</code> (for
mstest), <code>[Fact]</code> or <code>[Theory]</code> (for xunit) or <code>[Test]</code>, <code>[TestCase]</code>, <code>[TestCaseSource]</code> or
<code>[Theory]</code> (for nunit). However, whether or not they have a test attribute, non-<code>public</code> methods are not recognized as tests,
and therefore not executed. Neither are <code>async</code> <code>void</code> methods, or methods with generics anywhere in their signatures.</p>
<h2>Noncompliant Code Example</h2>
<pre>
[TestMethod]
void TestNullArg()  // Noncompliant; method is not public
{  /* ... */  }

[TestMethod]
public async void MyIgnoredTestMethod()  // Noncompliant; this is an 'async void' method
{ /* ... */ }

[TestMethod]
public void MyIgnoredGenericTestMethod&lt;T&gt;(T foo)  // Noncompliant; method has generics in its signature
{ /* ... */ }
</pre>
<h2>Compliant Solution</h2>
<pre>
[TestMethod]
public void TestNullArg()
{  /* ... */  }
</pre>
<h2>Exceptions</h2>
<p>Accessibility is ignored for xUnit <code>Fact</code> test methods, since they do not need to be <code>public</code>.</p>
<p><code>[Theory]</code> test methods in xUnit and <code>[TestCase]</code> and <code>[TestCaseSource]</code> test methods in nunit can be generic.</p>