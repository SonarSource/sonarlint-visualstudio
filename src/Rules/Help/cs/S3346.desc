<p>An assertion is a piece of code thatâ€™s used during development when the compilation debug mode is activated. It allows a program to check itself as
it runs. When an assertion is true, that means everything is operating as expected.</p>
<p>In non-debug mode, all <code>Debug.Assert</code> are automatically left out. So, by contract, the boolean expressions that are evaluated by those
assertions must absolutely not contain any side effects. Otherwise, when leaving the Debug mode, the functional behavior of the application is not the
same anymore.</p>
<p>The rule will raise if the method name starts with any of the following <code>remove</code>, <code>delete</code>, <code>add</code>,
<code>pop</code>, <code>update</code>, <code>retain</code>, <code>insert</code>, <code>push</code>, <code>append</code>, <code>clear</code>,
<code>dequeue</code>, <code>enqueue</code>, <code>dispose</code>, <code>put</code>, or <code>set</code>, although <code>SetEquals</code> will be
ignored.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Debug.Assert(list.Remove("dog"));
</pre>
<h2>Compliant Solution</h2>
<pre>
bool result = list.Remove("dog");
Debug.Assert(result);
</pre>