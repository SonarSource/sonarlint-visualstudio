<p>Marking a variable that is unchanged after initialization <code>const</code> is an indication to future maintainers that "no this isn’t updated,
and it’s not supposed to be". <code>const</code> should be used in these situations in the interests of code clarity.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public bool Seek(int[] input)
{
  var target = 32;  // Noncompliant
  foreach (int i in input)
  {
    if (i == target)
    {
      return true;
    }
  }
  return false;
}
</pre>
<p>or</p>
<pre>
public class Sample
{
  public void Method()
  {
    var context = $"{nameof(Sample)}.{nameof(Method)}";  // Noncompliant (C# 10 and above only)
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
public bool Seek(int[] input)
{
  const int target = 32;
  foreach (int i in input)
  {
    if (i == target)
    {
      return true;
    }
  }
  return false;
}
</pre>
<p>or</p>
<pre>
public class Sample
{
  public void Method()
  {
    const string context = $"{nameof(Sample)}.{nameof(Method)}";
  }
}
</pre>