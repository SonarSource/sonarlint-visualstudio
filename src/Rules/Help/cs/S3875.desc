<p>The use of <code>==</code> to compare two objects is expected to do a reference comparison. That is, it is expected to return <code>true</code> if
and only if they are the same object instance. Overloading the operator to do anything else will inevitably lead to the introduction of bugs by
callers. On the other hand, overloading it to do exactly that is pointless; thatâ€™s what <code>==</code> does by default.</p>
<h2>Noncompliant Code Example</h2>
<pre>
public static bool operator== (MyType x, MyType y) // Noncompliant
{
</pre>
<h2>Exceptions</h2>
<ul>
  <li> Classes with overloaded <code>operator +</code> or <code>operator -</code> methods are ignored. </li>
  <li> Classes that implement <code>IComparable&lt;T&gt;</code> or <code>IEquatable&lt;T&gt;</code> most probably behave as a value-type objects and
  so are ignored. </li>
</ul>