<p>Unused parameters are misleading. Whatever the values passed to such parameters, the behavior will be the same.</p>
<h2>Noncompliant Code Example</h2>
<pre>
function doSomething(a, b) { // "a" is unused
  return compute(b);
}
</pre>
<h2>Compliant Solution</h2>
<pre>
function doSomething(b) {
  return compute(b);
}
</pre>
<p>or</p>
<pre>
function doSomething(_a, b) {
  return compute(b);
}
</pre>
<h2>Exceptions</h2>
<p>When <code>arguments</code> is used in the function body, no parameter is reported as unused.</p>
<pre>
function doSomething(a, b, c) {
  compute(arguments);
}
</pre>
<p>Also, the rule ignores all parameters whose name starts with an underscore (<code>_</code>). This is a common practice to acknowledge the fact that
some parameter is unused (e.g. in TypeScript compiler).</p>
<pre>
function doSomething(_a, b) {
  return compute(b);
}
</pre>