<p>When an object is created with a setter for a property but without a getter for that property, the property is inaccessible and is thus
useless.</p>
<p>This rule also enforces the reverse situation (getter but no setter).</p>
<h2>Noncompliant Code Example</h2>
<pre>
var obj = {
    set foo(value) {
        this.fooval = value;
    }
};
</pre>
<h2>Compliant Solution</h2>
<pre>
var obj = {
    set foo(value) {
        this.fooval = value;
    },
    get foo() {
        return this.fooval;
    }
};
</pre>
<p>or</p>
<pre>
var obj = {
    setFoo(value) {    // a standard method, not a setter
        this.fooval = value;
    }
};
</pre>