<p>Browsers <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage">allow message exchanges</a> between Window objects of
different origins.</p>
<p>Because any window can send or receive messages from another window, it is important to verify the sender’s/receiver’s identity:</p>
<ul>
  <li> When sending a message with the postMessage method, the identity’s receiver should be defined (the wildcard keyword (<code>*</code>) should not
  be used). </li>
  <li> When receiving a message with a message event, the sender’s identity should be verified using the origin and possibly source properties. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<p>When sending a message:</p>
<pre>
var iframe = document.getElementById("testiframe");
iframe.contentWindow.postMessage("secret", "*"); // Noncompliant: * is used
</pre>
<p>When receiving a message:</p>
<pre>
window.addEventListener("message", function(event) { // Noncompliant: no checks are done on the origin property.
      console.log(event.data);
 });
</pre>
<h2>Compliant Solution</h2>
<p>When sending a message:</p>
<pre>
var iframe = document.getElementById("testsecureiframe");
iframe.contentWindow.postMessage("hello", "https://secure.example.com"); // Compliant
</pre>
<p>When receiving a message:</p>
<pre>
window.addEventListener("message", function(event) {

  if (event.origin !== "http://example.org") // Compliant
    return;

  console.log(event.data)
});
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://owasp.org/Top10/A01_2021-Broken_Access_Control/">OWASP Top 10 2021 Category A1</a> - Broken Access Control </li>
  <li> <a href="https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication">OWASP Top 10 2017 Category A2</a> - Broken Authentication
  </li>
  <li> <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage">developer.mozilla.org</a> - postMessage API </li>
  <li> <a href="https://cwe.mitre.org/data/definitions/345.html">MITRE, CWE-345</a> - Insufficient Verification of Data Authenticity </li>
</ul>