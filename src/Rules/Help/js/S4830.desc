<p>Validation of X.509 certificates is essential to create secure SSL/TLS sessions not vulnerable to man-in-the-middle attacks.</p>
<p>The certificate chain validation includes these steps:</p>
<ul>
  <li> The certificate is issued by its parent Certificate Authority or the root CA trusted by the system. </li>
  <li> Each CA is allowed to issue certificates. </li>
  <li> Each certificate in the chain is not expired. </li>
</ul>
<p>Itâ€™s not recommended to reinvent the wheel by implementing custom certificate chain validation.</p>
<p>TLS libraries provide built-in certificate validation functions that should be used.</p>
<h2>Noncompliant Code Example</h2>
<p>There is no way to disable certificate verification in tls, https and request modules but it is possible to not reject request when verification
fails.</p>
<p><a href="https://nodejs.org/api/https.html">https</a> built-in module:</p>
<pre>
let options = {
  hostname: 'www.example.com',
  port: 443,
  path: '/',
  method: 'GET',
  secureProtocol: 'TLSv1_2_method',
  rejectUnauthorized: false ; // Noncompliant
};

let req = https.request(options, (res) =&gt; {
  res.on('data', (d) =&gt; {
    process.stdout.write(d);
  });
}); // Noncompliant
</pre>
<p><a href="https://nodejs.org/api/tls.html">tls</a> built-in module:</p>
<pre>
let options = {
    secureProtocol: 'TLSv1_2_method',
    rejectUnauthorized: false ; // Noncompliant
};

let socket = tls.connect(443, "www.example.com", options, () =&gt; {
  process.stdin.pipe(socket);
  process.stdin.resume();
});  // Noncompliant
</pre>
<p><a href="https://www.npmjs.com/package/request">request</a> module:</p>
<pre>
let socket = request.get({
    url: 'www.example.com',
    secureProtocol: 'TLSv1_2_method',
    rejectUnauthorized: false ; // Noncompliant
});
</pre>
<h2>Compliant Solution</h2>
<p><a href="https://nodejs.org/api/https.html">https</a> built-in module:</p>
<pre>
let options = {
  hostname: 'www.example.com',
  port: 443,
  path: '/',
  method: 'GET',
  secureProtocol: 'TLSv1_2_method'
};

let req = https.request(options, (res) =&gt; {
  res.on('data', (d) =&gt; {
    process.stdout.write(d);
  });
}); // Compliant: by default rejectUnauthorized  is set to true
</pre>
<p><a href="https://nodejs.org/api/tls.html">tls</a> built-in module:</p>
<pre>
let options = {
    secureProtocol: 'TLSv1_2_method'
};

let socket = tls.connect(443, "www.example.com", options, () =&gt; {
  process.stdin.pipe(socket);
  process.stdin.resume();
}); // Compliant: by default rejectUnauthorized  is set to true
</pre>
<p><a href="https://www.npmjs.com/package/request">request</a> module:</p>
<pre>
let socket = request.get({
    url: 'https://www.example.com/',
    secureProtocol: 'TLSv1_2_method' // Compliant
}); // Compliant: by default rejectUnauthorized  is set to true
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://owasp.org/Top10/A02_2021-Cryptographic_Failures/">OWASP Top 10 2021 Category A2</a> - Cryptographic Failures </li>
  <li> <a href="https://owasp.org/Top10/A05_2021-Security_Misconfiguration/">OWASP Top 10 2021 Category A5</a> - Security Misconfiguration </li>
  <li> <a href="https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/">OWASP Top 10 2021 Category A7</a> - Identification and
  Authentication Failures </li>
  <li> <a href="https://www.owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure">OWASP Top 10 2017 Category A3</a> - Sensitive Data
  Exposure </li>
  <li> <a href="https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration">OWASP Top 10 2017 Category A6</a> - Security
  Misconfiguration </li>
  <li> <a href="https://mobile-security.gitbook.io/masvs/security-requirements/0x10-v5-network_communication_requirements">Mobile AppSec Verification
  Standard</a> - Network Communication Requirements </li>
  <li> <a href="https://owasp.org/www-project-mobile-top-10/2016-risks/m3-insecure-communication">OWASP Mobile Top 10 2016 Category M3</a> - Insecure
  Communication </li>
  <li> <a href="https://cwe.mitre.org/data/definitions/295">MITRE, CWE-295</a> - Improper Certificate Validation </li>
</ul>