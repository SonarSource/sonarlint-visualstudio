<p>When using a floating-point <code>for</code> loop counter, an accumulation of rounding errors may result in a mismatch between the expected and
actual number of iterations.</p>
<p>Even if floating-point loop counters appears to behave correctly on one implementation, it may give a different number of iterations on another
implementation.</p>
<h2>Noncompliant Code Example</h2>
<pre>
for (float counter = 0.0f; counter &lt; 1.0f; counter += 0.001f) {
  ...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
for (int counter = 0; counter &lt; 1000; ++counter) {
  ...
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 13.4 - The controlling expression of a for statement shall not contain any objects of floating type. </li>
  <li> MISRA C++:2008, 6-5-1 - A <em>for</em> loop shall contain a single <em>loop-counter</em> which shall not have floating type. </li>
  <li> MISRA C:2012, 14.1 - A <em>loop counter</em> shall not have essentially <em>floating type</em>. </li>
  <li> <a href="https://wiki.sei.cmu.edu/confluence/display/c/FLP30-C.+Do+not+use+floating-point+variables+as+loop+counters">CERT, FLP30-C.</a> - Do
  not use floating-point variables as loop counters </li>
</ul>