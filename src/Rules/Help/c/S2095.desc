<p>A call to the <code>fopen()</code>/<code>open()</code> function must be matched with a call to <code>fclose()</code>/<code>close</code>. Otherwise,
you run the risk of using up all the OSâ€™s file handles, which could lock up not just your program but potentially everything on the box.</p>
<h2>Noncompliant Code Example</h2>
<pre>
int fun() {
  FILE *f = fopen("file", "r");
  if (f == NULL) {
    return -1;
  }
  // ...
  return 0; // Noncompliant, file f has not been closed
}
</pre>
<h2>Compliant Solution</h2>
<pre>
int fun() {
  FILE *f = fopen("file", "r");
  if (f == NULL) {
    return -1;
  }
  // ...
  fclose(f);
  return 0;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://cwe.mitre.org/data/definitions/459">MITRE, CWE-459</a> - Incomplete Cleanup </li>
  <li> <a href="https://cwe.mitre.org/data/definitions/772">MITRE, CWE-772</a> - Missing Release of Resource after Effective Lifetime </li>
  <li> <a href="https://wiki.sei.cmu.edu/confluence/x/vjdGBQ">CERT, FIO04-J.</a> - Release resources when they are no longer needed </li>
  <li> <a href="https://wiki.sei.cmu.edu/confluence/x/QtUxBQ">CERT, FIO42-C.</a> - Close files when they are no longer needed </li>
  <li> <a href="https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html">Try With Resources</a> </li>
</ul>