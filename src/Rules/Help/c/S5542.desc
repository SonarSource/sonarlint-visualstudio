<p>Encryption algorithms should use secure modes and padding schemes where appropriate to guarantee data confidentiality and integrity.</p>
<ul>
  <li> For block cipher encryption algorithms (like AES):
    <ul>
      <li> The ECB (Electronic Codebook) cipher mode doesn’t provide serious message confidentiality: under a given key any given plaintext block
      always gets encrypted to the same ciphertext block. This mode should never be used. </li>
      <li> The CBC (Cipher Block Chaining) mode by itself provides only data confidentiality. This cipher mode is also vulnerable to <a
      href="https://en.wikipedia.org/wiki/Padding_oracle_attack">padding oracle attacks</a> when used with padding. Using CBC along with Message
      Authentication Code can provide data integrity and should prevent such attacks. In practice the implementation has many pitfalls and it’s
      recommended to avoid CBC with padding completely. </li>
      <li> The GCM (Galois Counter Mode) mode which <a href="https://en.wikipedia.org/wiki/Galois/Counter_Mode#Mathematical_basis">works
      internally</a> with zero/no padding scheme, is recommended, as it is designed to provide both data authenticity (integrity) and confidentiality.
      Other similar modes are CCM, CWC, EAX, IAPM and OCB. </li>
    </ul>  </li>
  <li> For RSA encryption algorithm, the recommended padding scheme is OAEP. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<p><a href="https://github.com/randombit/botan">botan</a></p>
<pre>
#include &lt;botan/cipher_mode.h&gt;
#include &lt;botan/pubkey.h&gt;
#include &lt;botan/rsa.h&gt;

// Example for a symmetric cipher: AES
Botan::Cipher_Mode::create("AES-256/ECB", Botan::ENCRYPTION);       // Noncompliant
Botan::Cipher_Mode::create("AES-256/CBC/PKCS7", Botan::ENCRYPTION); // Noncompliant

// Example for a asymmetric cipher: RSA
std::unique_ptr&lt;Botan::RandomNumberGenerator&gt; rng(new Botan::AutoSeeded_RNG);
Botan::RSA_PrivateKey rsaKey(*rng.get(), 2048);

Botan::PK_Encryptor_EME(rsaKey, *rng.get(), "PKCS1v15"); // Noncompliant
</pre>
<p><a href="https://software.opensuse.org/package/libcryptopp">crypto++</a></p>
<pre>
#include &lt;cryptopp/aes.h&gt;
#include &lt;cryptopp/modes.h&gt;
#include &lt;cryptopp/rsa.h&gt;

// Example for a symmetric cipher: AES
CryptoPP::ECB_Mode&lt;CryptoPP::AES&gt;::Encryption(); // Noncompliant
CryptoPP::CBC_Mode&lt;CryptoPP::AES&gt;::Encryption(); // Noncompliant

// Example for a asymmetric cipher: RSA
CryptoPP::RSAES&lt;CryptoPP::PKCS1v15&gt;::Encryptor(); // Noncompliant
</pre>
<p><a href="https://github.com/openssl/openssl">OpenSSL</a></p>
<pre>
#include &lt;openssl/evp.h&gt;
#include &lt;openssl/rsa.h&gt;

// Example for a symmetric cipher: AES
EVP_aes_128_ecb(); // Noncompliant
EVP_aes_128_cbc(); // Noncompliant

// Example for a asymmetric cipher: RSA
RSA_public_decrypt(flen, from, to, key, RSA_PKCS1_PADDING); // Noncompliant
RSA_public_decrypt(flen, from, to, key, RSA_SSLV23_PADDING); // Noncompliant
RSA_public_decrypt(flen, from, to, key, RSA_NO_PADDING); // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<p><a href="https://github.com/randombit/botan">botan</a></p>
<pre>
#include &lt;botan/cipher_mode.h&gt;
#include &lt;botan/pubkey.h&gt;
#include &lt;botan/rsa.h&gt;

// AES symmetric cipher is recommended to be used with GCM mode
Botan::Cipher_Mode::create("AES-256/GCM", Botan::ENCRYPTION);  // Compliant

// RSA asymmetric cipher is recommended to be used with OAEP padding
std::unique_ptr&lt;Botan::RandomNumberGenerator&gt; rng(new Botan::AutoSeeded_RNG);
Botan::RSA_PrivateKey rsaKey(*rng.get(), 2048);

Botan::PK_Encryptor_EME(rsaKey, *rng.get(), "OAEP"); // Compliant
</pre>
<p><a href="https://software.opensuse.org/package/libcryptopp">crypto++</a></p>
<pre>
#include &lt;cryptopp/gcm.h&gt;

// AES symmetric cipher is recommended to be used with GCM mode
CryptoPP::GCM&lt;CryptoPP::AES&gt;::Encryption(); // Compliant

// RSA asymmetric cipher is recommended to be used with OAEP padding
CryptoPP::RSAES&lt;CryptoPP::OAEP&lt;CryptoPP::SHA1&gt;&gt;::Encryptor(); // Compliant
</pre>
<p><a href="https://github.com/openssl/openssl">OpenSSL</a></p>
<pre>
#include &lt;openssl/evp.h&gt;

// AES symmetric cipher is recommended to be used with GCM mode
EVP_aes_128_gcm() // Compliant

// RSA asymmetric cipher is recommended be used with OAEP padding
RSA_public_decrypt(flen, from, to, key, RSA_PKCS1_OAEP_PADDING); // Compliant
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://owasp.org/Top10/A02_2021-Cryptographic_Failures/">OWASP Top 10 2021 Category A2</a> - Cryptographic Failures </li>
  <li> <a href="https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration">OWASP Top 10 2017 Category A6</a> - Security
  Misconfiguration </li>
  <li> <a href="https://cwe.mitre.org/data/definitions/327">MITRE, CWE-327</a> - Use of a Broken or Risky Cryptographic Algorithm </li>
  <li> <a href="https://www.sans.org/top25-software-errors/#cat3">SANS Top 25</a> - Porous Defenses </li>
</ul>