<p>There are several reasons for a method not to have a method body:</p>
<ul>
  <li> It is an unintentional omission, and should be fixed to prevent an unexpected behavior in production. </li>
  <li> It is not yet, or never will be, supported. In this case an exception should be thrown in languages where that mechanism is available. </li>
  <li> The method is an intentionally-blank override. In this case a nested comment should explain the reason for the blank override. </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
void fun(int p1) {
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void fun(int p1) {
  int a = doSomething(p1);
  int threshold = 42;
  if (a &gt; threshold) {
    // ...
  }
}
</pre>
<p>or</p>
<pre>
void fun(int p1) {
  // Intentionally unimplemented...
}
</pre>
<h2>Exceptions</h2>
<p>This rule doesnâ€™t raise an issue for empty class constructors or destructors. For instance this is the only way to define user-defined default
constructors.</p>