<p>When there is only a single condition to test, you have the option of using either a <code>switch</code> statement or an <code>if</code>-<code>else
if</code>-<code>else</code> statement. For a larger set of potential values, a <code>switch</code> can be easier to read, but when the condition being
tested is essentially boolean, then an <code>if</code>/<code>else</code> statement should be used instead.</p>
<h2>Noncompliant Code Example</h2>
<pre>
_Bool b = p &gt; 0;
switch (b) { // Noncompliant
...
}
switch (x == 0) { // Noncompliant
...
}
</pre>
<h2>Compliant Solution</h2>
<pre>
_Bool b = p &gt; 0;
if (b) {
...
} else {
...
}
if (x == 0) {
...
} else {
...
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 15.4 - A switch expression shall not represent a value that is effectively Boolean </li>
  <li> MISRA C++ 2008, 6-4-7 - The condition of a switch statement shall not have bool type </li>
  <li> MISRA C:2012, 16.7 - A switch-expression shall not have essentially Boolean type </li>
</ul>