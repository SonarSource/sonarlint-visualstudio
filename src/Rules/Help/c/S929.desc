<p>There is a real, functional difference between a function with an empty parameter list and one with an explicitly <code>void</code> parameter list:
It is possible to pass parameters to a function with an empty list; the compiler wonâ€™t complain. That is not the case for a function with a
<code>void</code> list. Thus, it is possible, and even easy to invoke empty-list functions incorrectly without knowing it, and thereby introduce the
kind of subtle bug that can be very difficult to track down.</p>
<h2>Noncompliant Code Example</h2>
<pre>
void myfunc ();  // Noncompliant

//...

void otherFunc() {
  int a = 4;
  //...
  myfunc(a); // Compiler allows this
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void myfunc ( void );

//...

void otherFunc() {
  int a = 4;
  //...
  myfunc(a); // Compiler error!
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 16.5 - Functions with no parameters shall be declared with parameter type void </li>
  <li> <a href="https://wiki.sei.cmu.edu/confluence/x/t9YxBQ">CERT, DCL20-C.</a> - Explicitly specify void when a function accepts no arguments </li>
</ul>