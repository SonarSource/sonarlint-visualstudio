<p>Nested <code>switch</code> structures are difficult to understand because you can easily confuse the cases of an inner <code>switch</code> as
belonging to an outer statement. Therefore nested <code>switch</code> statements should be avoided.</p>
<p>Specifically, you should structure your code to avoid the need for nested <code>switch</code> statements, but if you cannot, then consider moving
the inner <code>switch</code> to another function.</p>
<h2>Noncompliant Code Example</h2>
<pre>
void func(int n, int m) {

  switch (n) {
    case 1:
      // ...
    case 2:
      // ...
    case 3:
      switch (m) {  // Noncompliant
    case 4:  // Bad indentation makes this particularly hard to read properly
      // ...
    case 5:
      // ...
    case 6:
      // ...
    }
    case 4:
      // ...
    default:
      // ...
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void func(int n, int m) {

  switch (n) {
    case 1:
      // ...
    case 2:
      // ...
    case 3:
      int m2 = handle_m(m);
    case 4:
      // ...
    default:
      // ...
  }
}
</pre>