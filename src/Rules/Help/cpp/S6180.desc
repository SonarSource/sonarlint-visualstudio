<p>C++20 introduces two standard attributes to indicate the likelihood of a branch: <code>[[likely]]</code> and <code>[[unlikely]]</code>.</p>
<p>These attributes replace the non-standard built-in <code>__builtin_expect</code> supported by Clang and GCC that was mostly used as part of
<code>likely()</code> and <code>unlikely()</code> macros.</p>
<p>The standard annotations should always be preferred because they make the code portable and future-proof.</p>
<p>This rule reports the use of direct use of <code>__builtin_expect</code> built-in as well as its indirect use by means of <code>likely()</code> and
<code>unlikely()</code> macros.</p>
<h2>Noncompliant Code Example</h2>
<pre>
if (likely(!v.empty())) { // Noncompliant
  std::cout &lt;&lt;v[0] &lt;&lt;'\n';
}

if (unlikely(nullptr == ptr)) { // Noncompliant
  std::cerr &lt;&lt;"Unexpected null pointer\n";
  exit(0);
}
</pre>
<h2>Compliant Solution</h2>
<pre>
if (!v.empty()) [[likely]] {
  std::cout &lt;&lt;v[0] &lt;&lt;'\n';
}

if (nullptr == ptr) [[unlikely]] {
  std::cerr &lt;&lt;"Unexpected null pointer\n";
  exit(0);
}
</pre>