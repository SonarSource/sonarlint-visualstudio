<p>UNIX/POSIX functions can have undefined behavior if they are not called correctly. More specifically:</p>
<ul>
  <li> allocation size of <code>calloc</code>, <code>malloc</code>, <code>realloc</code>, <code>reallocf</code>, <code>alloca</code> and
  <code>valloc</code> should be strictly positive </li>
  <li> <code>open</code> and <code>openat</code> should be called with a flag that contains one access mode: <code>O_RDONLY</code>,
  <code>O_WRONLY</code>, or <code>O_RDWR</code> </li>
  <li> <code>open</code> and <code>openat</code> with flag <code>O_CREAT</code> should be called with a third argument </li>
  <li> flag <code>O_EXCL</code> should be used with <code>O_CREAT</code> </li>
  <li> first argument of <code>pthread_once</code> should not have automatic storage duration and should be initialized by
  <code>PTHREAD_ONCE_INIT</code> </li>
</ul>
<h2>Noncompliant Code Example</h2>
<pre>
int res = open(file, O_CREAT); // Noncompliant, flag O_CREAT requires a third argument

void *mem = alloca(0); // Noncompliant, allocation of 0 bytes

extern void initialize();
pthread_once_t pthread = PTHREAD_ONCE_INIT;
pthread_once(&amp;pthread, initialize); // Noncompliant, do not pass a local variable as argument
</pre>