<p>Since C++11, type aliases can be declared via <code>using</code> or <code>typedef</code>. <code>using</code> should be preferred as more readable
because you see the new name/alias first.</p>
<p>In addition, <code>using</code> can be templated, which makes it applicable to more situations than <code>typedef</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
typedef void (*FunctionPointerType)(int);
</pre>
<h2>Compliant Solution</h2>
<pre>
using FunctionPointerType = void (*)(int);
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://github.com/isocpp/CppCoreGuidelines/blob/036324/CppCoreGuidelines.md#t43-prefer-using-over-typedef-for-defining-aliases">C++
  Core Guidelines - T.43</a> - Prefer using over typedef for defining aliases </li>
</ul>