<p>In the interest of code clarity, <code>static</code> member variables of a base class should never be accessed using a derived typeâ€™s name. Doing
so is confusing and could create the illusion that two different static variables exist. If the variable is <code>const</code>, there is no risk of
confusion.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class Parent {
  public:
    static int count;
    static Color const defaultColor = green;
};

class Child : public Parent {
  public:
    Child() : myColor(Child::defaultColor) // Compliant, this is a constant
    {
      Child::count++;  // Noncompliant
    }
};
</pre>
<h2>Compliant Solution</h2>
<pre>
class Parent {
  public:
    static int count;
    static Color const defaultColor = green;
};

class Child : public Parent {
  public:
    Child() : myColor(Child::defaultColor) // Compliant, this is a constant
    {
      Parent::count++;
    }
};
</pre>