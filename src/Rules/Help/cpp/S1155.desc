<p>Using a <code>size()</code>, <code>length()</code> or <code>count()</code> method to test for emptiness works, but using an <code>empty()</code> or
<code>is_empty()</code> method makes the code more readable and can be more performant. The time complexity of any
<code>empty()</code>/<code>is_empty()</code> method implementation should be <code>O(1)</code>, whereas some implementations of <code>size()</code>,
<code>length()</code> or <code>count()</code> can be <code>O(n)</code>.</p>
<h2>Noncompliant Code Example</h2>
<pre>
void fun(const std::vector&lt;int&gt; &amp;myVector) {
  if (myVector.size() == 0) { // Noncompliant
    // do something
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void fun(const std::vector&lt;int&gt; &amp;myVector) {
  if (myVector.empty()) {
    // do something
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://github.com/isocpp/CppCoreGuidelines/blob/c553535fb8dda2839d13ab5f807ffbc66b63d67b/CppCoreGuidelines.md#enforcement-324">C++
  Core Guidelines - T.143</a> - Donâ€™t write unintentionally nongeneric code </li>
</ul>