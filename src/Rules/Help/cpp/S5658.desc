<p>Attempting to make a comparison between pointers using &gt;, &gt;=, &lt; or &lt;= will produce undefined behavior if the two pointers point to
different arrays.</p>
<p>Additionally, directly comparing two arrays for equality or inequality has been deprecated in C++.</p>
<p>However, equality or inequality between an array and a pointer is still valid</p>
<h2>Noncompliant Code Example</h2>
<pre>
void f1 ( )
{
  int a1[ 10 ];
  int a2[ 10 ];
  int * p1 = a1;
  if ( p1 &lt; a2 ) // Non-compliant, p1 and a2 point to different arrays.
  {
  }
  if ( p1 - a2 &gt; 0 ) // Non-compliant, p1 and a2 point to different arrays.
  {
  }
  if ( a1 == a2) // Non-compliant (in C++). Comparing different array for equality is deprecated
  {
  }
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void f1 ( )
{
  int a1[ 10 ];
  int * p1 = a1;
  if ( p1 &lt; a1 ) // Compliant, p1 and a1 point to the same array.
  {
  }
  if ( p1 - a1 &gt; 0 )  // Compliant, p1 and a1 point to the same array.
  {
  }
  if ( p1 == a2 ) // Compliant, comparing a pointer and an array for equality is valid
  {
  }
}
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C:2004, 17.3 - &gt;, &gt;=, &lt;, &lt;= shall not be applied to pointer types except where they point to the same array. </li>
  <li> MISRA C++:2008, 5-0-18 - &gt;, &gt;=, &lt;, &lt;= shall not be applied to objects of pointer type, except where they point to the same array.
  </li>
  <li> <a href="https://github.com/isocpp/CppCoreGuidelines/blob/036324/CppCoreGuidelines.md#es62-dont-compare-pointers-into-different-arrays">C++
  Core Guidelines ES.62</a> - Donâ€™t compare pointers into different arrays </li>
</ul>