<p>By specification, objects supporting move operations will be left in a valid but unspecified state after the move. Even if in a valid state, the
fact of being in an unspecified state leads to undefined behavior, you should not rely on their value.</p>
<h2>Noncompliant Code Example</h2>
<pre>
void f() {
  A a;

  A a2 = std::move(a);
  a.fun(); // Noncompliant, a is moved-from
}
</pre>
<h2>Compliant Solution</h2>
<pre>
void f() {
  A a;

  A a2 = std::move(a);
  a2.fun();
}
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://www.securecoding.cert.org/confluence/x/O3s-BQ">CERT, EXP63-CPP.</a> - Do not rely on the value of a moved-from object </li>
</ul>