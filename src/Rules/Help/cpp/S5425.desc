<p><em>Forwarding references</em> are a special kind of references that both ignore and preserve the <em>value category</em> of a function argument,
making it possible to forward it by means of <code>std::forward</code>.</p>
<p>Any code using such a reference for any other purpose than forwarding is actually ignoring rvalue-ness and const-ness of the associated
parameter.</p>
<h2>Noncompliant Code Example</h2>
<pre>
#include &lt;utility&gt;
#include &lt;string&gt;
#include &lt;iostream&gt;

template&lt;typename TP&gt; void f( TP&amp;&amp; arg ) {
    std::string s(arg);
}

int main() {
    std::string s("test");
    f(std::move(s));
    std::cout&lt;&lt;"f:"&lt;&lt;s&lt;&lt;std::endl; // output is "f:test"

    return 0;
}
</pre>
<h2>Compliant Solution</h2>
<pre>
#include &lt;utility&gt;
#include &lt;string&gt;
#include &lt;iostream&gt;

template&lt;typename TP&gt; void f( TP&amp;&amp; arg ) {
    std::string s(std::forward&lt;TP&gt;(arg));
}

int main() {
    std::string s("test");
    f(std::move(s));
    std::cout&lt;&lt;"f:"&lt;&lt;s&lt;&lt;std::endl; // output is "f:"

    return 0;
}
</pre>
<h2>See</h2>
<ul>
  <li> <a
  href="https://github.com/isocpp/CppCoreGuidelines/blob/036324/CppCoreGuidelines.md#f19-for-forward-parameters-pass-by-tp-and-only-stdforward-the-parameter">C++ Core Guidelines F.19</a> - For “forward” parameters, pass by TP&amp;&amp; and only std::forward the parameter </li>
</ul>