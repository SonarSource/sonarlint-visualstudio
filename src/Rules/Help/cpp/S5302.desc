<p>Casting from a virtual base to a derived class, using any means other than dynamic_cast has undefined behaviour. The behaviour for dynamic_cast is
defined.</p>
<p>Note: As of C++17, the program is considered as ill-formed and an error is reported.</p>
<p>Most compilers emit an error for previous versions of C++ as well.</p>
<h2>Noncompliant Code Example</h2>
<pre>
class B { ... };
class D: public virtual B { ... };
D d;
B *pB = &amp;d;

D *pD1 = ( D * ) pB; // Noncompliant - undefined behaviour
D *pD2 = static_cast&lt;D*&gt;(pB); // Noncompliant - undefined behaviour
</pre>
<h2>Compliant Solution</h2>
<pre>
class B { ... };
class D: public virtual B { ... };
D d;
B *pB = &amp;d;

D *pD1 = dynamic_cast&lt;D*&gt;(pB); // Compliant, but pD2 may be NULL
D &amp; D2 = dynamic_cast&lt;D&amp;&gt;(*pB); // Compliant, but may throw an exception
</pre>
<h2>See</h2>
<ul>
  <li> MISRA C++:2008, 5-2-2 - A pointer to a virtual base class shall only be cast to a pointer to a derived class by means of dynamic_cast. </li>
</ul>