<p>The C linkage declaration <code>extern "C"</code> can not be combined with a namespace. In practical terms only one function with that name can be
declared as <code>extern "C"</code> because the <code>namespace</code> is functionally ignored.</p>
<h2>Noncompliant Code Example</h2>
<pre>
namespace ns1 {
    extern "C" void doSomething();  // Noncompliant
    // ...
}

extern "C" {
  namespace ns2 {  // Noncompliant
    // ...
  }
  // ...
}

ns1::doSomething();
doSomething(); // Works too, same as above
</pre>
<h2>Compliant Solution</h2>
<pre>
extern "C" void doSomething();

namespace ns1 {
  // ...
}

extern "C" {
  // ...
}

namespace ns2 {  // Noncompliant
  // ...
}

doSomething();
</pre>
<h2>Exceptions</h2>
<p><code>extern "C"</code> can prefix <code>typedef</code>.</p>
<pre>
namespace ns1 {
    extern "C" typedef void c_function();  // Compliant, type named 'c_function' exists only in 'ns1' and not in the global namespace
    // ...
}
</pre>