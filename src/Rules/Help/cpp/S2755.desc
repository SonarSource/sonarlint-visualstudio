<p>XML standard allows the use of entities, declared in the DOCTYPE of the document, which can be <a
href="https://www.w3.org/TR/xml/#sec-internal-ent">internal</a> or <a href="https://www.w3.org/TR/xml/#sec-external-ent">external</a>.</p>
<p>When parsing the XML file, the content of the external entities is retrieved from an external storage such as the file system or network, which may
lead, if no restrictions are put in place, to arbitrary file disclosures or <a
href="https://owasp.org/www-community/attacks/Server_Side_Request_Forgery">server-side request forgery (SSRF)</a> vulnerabilities.</p>
<p>Itâ€™s recommended to limit resolution of external entities by using one of these solutions:</p>
<ul>
  <li> If DOCTYPE is not necessary, completely disable all DOCTYPE declarations. </li>
  <li> If external entities are not necessary, completely disable their declarations. </li>
  <li> If external entities are necessary then:
    <ul>
      <li> Use XML processor features, if available, to authorize only required protocols (eg: https). </li>
      <li> And use an entity resolver (and optionally an XML Catalog) to resolve only trusted entities. </li>
    </ul>  </li>
</ul>
<h2>Noncompliant Code Example</h2>
<p><a href="http://xerces.apache.org/">Xerces</a> XercesDOMParser library:</p>
<pre>
#include "xercesc/parsers/XercesDOMParser.hpp"

XercesDOMParser *DOMparser = new XercesDOMParser();
// no entity reference node will be created so the entities will be expanded
DOMparser-&gt;setCreateEntityReferenceNodes(false); // Noncompliant
DOMparser-&gt;setDisableDefaultEntityResolution(false); // Noncompliant

DOMparser-&gt;parse(xmlFile);
</pre>
<p><a href="http://xerces.apache.org/">Xerces</a> SAX2XMLReader library:</p>
<pre>
#include "xercesc/sax2/SAX2XMLReader.hpp"
SAX2XMLReader* reader = XMLReaderFactory::createXMLReader(); // Noncompliant: by default entities resolution is enabled so SAX2XMLReader is not safe
reader-&gt;setFeature(XMLUni::fgXercesDisableDefaultEntityResolution, false); // Noncompliant: enable resolution of entities explicitly

reader-&gt;parse(xmlFile);
</pre>
<p><a href="http://xerces.apache.org/">Xerces</a> SAXParser library:</p>
<pre>
#include "xercesc/parsers/SAXParser.hpp"

SAXParser* SAXparser = new SAXParser(); // Noncompliant: by default entities resolution is enabled so SAXParser is not safe
SAXparser-&gt;setDisableDefaultEntityResolution(false); // Noncompliant: enable resolution of entities explicitly

SAXparser-&gt;parse(xmlFile);
</pre>
<p><a href="http://xmlsoft.org/">LibXML2</a> library:</p>
<pre>
#include "libxml/parser.h"

xmlDocPtr doc = xmlReadFile(xmlFile, nullptr, XML_PARSE_DTDLOAD | XML_PARSE_NOENT); // Noncompliant
</pre>
<h2>Compliant Solution</h2>
<p><a href="http://xerces.apache.org/">Xerces</a> XercesDOMParser library:</p>
<pre>
#include "xercesc/parsers/XercesDOMParser.hpp"

XercesDOMParser *DOMparser = new XercesDOMParser(); // by default XercesDOMParser is safe
DOMparser-&gt;setCreateEntityReferenceNodes(true); // Compliant: explicitly make the parser safe to XXE vulnerability
DOMparser-&gt;setDisableDefaultEntityResolution(true); // Compliant

DOMparser-&gt;parse(xmlFile);
</pre>
<p><a href="http://xerces.apache.org/">Xerces</a> SAX2XMLReader library:</p>
<pre>
#include "xercesc/sax2/SAX2XMLReader.hpp"

SAX2XMLReader* reader = XMLReaderFactory::createXMLReader();
reader-&gt;setFeature(XMLUni::fgXercesDisableDefaultEntityResolution, true); // Compliant

reader-&gt;parse(xmlFile);
</pre>
<p><a href="http://xerces.apache.org/">Xerces</a> SAXParser library:</p>
<pre>
#include "xercesc/parsers/SAXParser.hpp"

SAXParser* SAXparser = new SAXParser();
SAXparser-&gt;setDisableDefaultEntityResolution(true); // Compliant

SAXparser-&gt;parse(xmlFile);
</pre>
<p><a href="http://xmlsoft.org/">LibXML2</a> library:</p>
<pre>
#include "libxml/parser.h"

xmlDocPtr doc = xmlReadFile(xmlFile, nullptr, 0); // Compliant: safe by default since version 2.9
</pre>
<h2>See</h2>
<ul>
  <li> <a href="https://owasp.org/Top10/A05_2021-Security_Misconfiguration/">OWASP Top 10 2021 Category A5</a> - Security Misconfiguration </li>
  <li> <a href="https://owasp.org/www-project-top-ten/2017/A4_2017-XML_External_Entities_(XXE)">OWASP Top 10 2017 Category A4</a> - XML External
  Entities (XXE) </li>
  <li> <a href="https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html#libxerces-c">OWASP XXE Prevention Cheat
  Sheet for Xerces</a> </li>
  <li> <a href="https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html#libxml2">OWASP XXE Prevention Cheat
  Sheet for LibXML2</a> </li>
  <li> <a href="https://cwe.mitre.org/data/definitions/611">MITRE, CWE-611</a> - Information Exposure Through XML External Entity Reference </li>
  <li> <a href="https://cwe.mitre.org/data/definitions/827">MITRE, CWE-827</a> - Improper Control of Document Type Definition </li>
</ul>