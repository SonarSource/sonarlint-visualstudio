<p>Duplicated string literals make the process of refactoring error-prone, since you must be sure to update all occurrences.</p>
<p>On the other hand, constants can be referenced from many places, but only need to be updated in a single place.</p>
<h2>Noncompliant Code Example</h2>
<pre>
Public Class Foo

    Private Name As String = "foobar" ' Noncompliant

    Public ReadOnly Property DefaultName As String = "foobar" ' Noncompliant

    Public Sub New(Optional Value As String = "foobar") ' Noncompliant

        Dim Something = If(Value, "foobar") ' Noncompliant

    End Sub

End Class
</pre>
<h2>Compliant Solution</h2>
<pre>
Public Class Foo

    Private Const Foobar As String = "foobar"

    Private Name As String = Foobar

    Public ReadOnly Property DefaultName As String = Foobar

    Public Sub New(Optional Value As String = Foobar)

        Dim Something = If(Value, Foobar)

    End Sub

End Class
</pre>
<h2>Exceptions</h2>
<p>The following are ignored:</p>
<ul>
  <li> literals with fewer than 5 characters </li>
  <li> literals matching one of the parameter names </li>
  <li> literals used in attributes </li>
</ul>