<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ERR_ShowToolWindow_Exception" xml:space="preserve">
    <value>Error displaying tool window. Window id: {0}. Error: {1}</value>
  </data>
  <data name="FinishedPackageInitialization" xml:space="preserve">
    <value>Finished initializing security package.</value>
  </data>
  <data name="HotspotsControl_CodeColumnHeader" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="HotspotsControl_ColColumnHeader" xml:space="preserve">
    <value>Col</value>
  </data>
  <data name="HotspotsControl_DescriptionColumnHeader" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="HotspotsControl_StatusColumnHeader" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="HotspotsControl_FileColumnHeader" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="HotspotsControl_LineColumnHeader" xml:space="preserve">
    <value>Line</value>
  </data>
  <data name="HotspotsControl_NavigationErrorTooltip" xml:space="preserve">
    <value>Cannot navigate to location. The source code is different from the analyzed version.</value>
  </data>
  <data name="HotspotsControl_NavigationTooltip" xml:space="preserve">
    <value>Use double-click or Enter to navigate to the security hotspot.</value>
  </data>
  <data name="HotspotsControl_NotOnServerTooltip" xml:space="preserve">
    <value>Security Hotspot does not exist on the server.</value>
  </data>
  <data name="HotspotsControl_PriorityColumnHeader" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="HotspotsControl_ReviewHotspotTooltip" xml:space="preserve">
    <value>Review Security Hotspot</value>
  </data>
  <data name="HotspotsControl_ServerStatusColumnHeader" xml:space="preserve">
    <value>Server status</value>
  </data>
  <data name="HotspotsControl_SonarCloudTooltip" xml:space="preserve">
    <value>Security Hotspot exists on SonarQube Cloud.</value>
  </data>
  <data name="HotspotsControl_SonarQubeTooltip" xml:space="preserve">
    <value>Security Hotspot exists on SonarQube Server.</value>
  </data>
  <data name="HotspotsToolWindowCaption" xml:space="preserve">
    <value>SonarQube Security Hotspots</value>
  </data>
  <data name="ReviewHotspotService_AnErrorOccurred" xml:space="preserve">
    <value>An error occurred while reviewing hotspot: {0}.</value>
  </data>
  <data name="ReviewHotspotService_NotPermitted" xml:space="preserve">
    <value>Reviewing hotspot was not permitted due to: {0}.</value>
  </data>
  <data name="ReviewHotspotWindow_AcknowledgeContent" xml:space="preserve">
    <value>The code has been reviewed and does pose a risk. A fix is required.</value>
  </data>
  <data name="ReviewHotspotWindow_AcknowledgeTitle" xml:space="preserve">
    <value>Acknowledged</value>
  </data>
  <data name="ReviewHotspotWindow_CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ReviewHotspotWindow_ReviewFailureMessage" xml:space="preserve">
    <value>An error occurred while reviewing the hotspot. The status has not been changed.
Please check the logs for more details.</value>
  </data>
  <data name="ReviewHotspotWindow_CheckReviewPermittedFailureMessage" xml:space="preserve">
    <value>The hotspot can not be reviewed due to the following error: {0}
Please check the logs for more details.</value>
  </data>
  <data name="ReviewHotspotWindow_NoStatusSelectedFailureMessage" xml:space="preserve">
    <value>No hotspot has been selected.</value>
  </data>
  <data name="ReviewHotspotWindow_FailureTitle" xml:space="preserve">
    <value>Review Hotspot Failure</value>
  </data>
  <data name="ReviewHotspotWindow_FixedContent" xml:space="preserve">
    <value>The code has been reviewed and modified to follow the recommended secure coding practices.</value>
  </data>
  <data name="ReviewHotspotWindow_FixedTitle" xml:space="preserve">
    <value>Fixed</value>
  </data>
  <data name="ReviewHotspotWindow_SafeContent" xml:space="preserve">
    <value>The code has been reviewed and does not pose a risk. It does not need to be modified.</value>
  </data>
  <data name="ReviewHotspotWindow_SafeTitle" xml:space="preserve">
    <value>Safe</value>
  </data>
  <data name="ReviewHotspotWindow_SubmitButton" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="ReviewHotspotWindow_Title" xml:space="preserve">
    <value>Change Security Hotspot Status on SonarQube (Server, Cloud)</value>
  </data>
  <data name="ReviewHotspotWindow_ToReviewContent" xml:space="preserve">
    <value>This security hotspot needs to be reviewed to assess whether the code poses a risk.</value>
  </data>
  <data name="ReviewHotspotWindow_ToReviewTitle" xml:space="preserve">
    <value>To Review</value>
  </data>
  <data name="StartedPackageInitialization" xml:space="preserve">
    <value>Initializing security package...</value>
  </data>
  <data name="TaintToolWindowCaption" xml:space="preserve">
    <value>SonarQube Taint Vulnerabilities</value>
  </data>
  <data name="HotspotsControl_CurrentDocumentFilter" xml:space="preserve">
    <value>Current Document</value>
  </data>
  <data name="HotspotsControl_OpenDocumentsFilter" xml:space="preserve">
    <value>Open Documents</value>
  </data>
  <data name="HotspotControl_LocalHotspotStatusTooltip" xml:space="preserve">
    <value>The hotspots not yet present on the server need to be fixed locally.</value>
  </data>
  <data name="ViewIssueInSonarQubeCloud" xml:space="preserve">
    <value>View in SonarQube Cloud</value>
  </data>
  <data name="ViewIssueInSonarQubeServer" xml:space="preserve">
    <value>View in SonarQube Server</value>
  </data>
  <data name="ReportViewToolWindowCaption" xml:space="preserve">
    <value>SonarQube Dependency Risks</value>
  </data>
  <data name="DependencyRisksGroupTitle" xml:space="preserve">
    <value>Solution findings</value>
  </data>
  <data name="DependencyRiskImpactSeverityTooltip" xml:space="preserve">
    <value>Severity impact:</value>
  </data>
  <data name="NoDependencyRiskFoundText" xml:space="preserve">
    <value>Please ensure that your solution is bound to a SonarQube project that contains dependency risks</value>
  </data>
  <data name="NoDependencyRiskFoundTitle" xml:space="preserve">
    <value>No Dependency Risks were found.</value>
  </data>
  <data name="IssueText" xml:space="preserve">
    <value>issue</value>
  </data>
  <data name="ChangeStatusWindow_CommentLabel" xml:space="preserve">
    <value>Add a comment:</value>
  </data>
  <data name="ChangeStatusWindow_FormattingHelpExamples" xml:space="preserve">
    <value>: *Bold*, ``Code``, * Bullet point</value>
  </data>
  <data name="ChangeStatusWindow_FormattingHelpLink" xml:space="preserve">
    <value>Formatting Help</value>
  </data>
  <data name="CommentRequiredErrorMessage" xml:space="preserve">
    <value>Comment is required.</value>
  </data>
  <data name="ChangeStatusMenuItem" xml:space="preserve">
    <value>Change Status</value>
  </data>
  <data name="ChangeDependencyRiskStatus_AcceptedDescription" xml:space="preserve">
    <value>This finding is valid, but it may not be fixed for a while.</value>
  </data>
  <data name="ChangeDependencyRiskStatus_ConfirmedDescription" xml:space="preserve">
    <value>This finding has been reviewed and the risk is valid.</value>
  </data>
  <data name="ChangeDependencyRiskStatus_OpenDescription" xml:space="preserve">
    <value>This finding has not yet been reviewed.</value>
  </data>
  <data name="ChangeDependencyRiskStatus_SafeDescription" xml:space="preserve">
    <value>This finding does not pose a risk. No fix is needed.</value>
  </data>
  <data name="ChangeDependencyRiskStatus_FixedDescription" xml:space="preserve">
    <value>This finding has been fixed.</value>
  </data>
  <data name="ChangeDependencyRiskStatus_ReopenTitle" xml:space="preserve">
    <value>Reopen</value>
  </data>
  <data name="ChangeDependencyRiskStatus_ConfirmTitle" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ChangeDependencyRiskStatus_AcceptTitle" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="ChangeDependencyRiskStatus_SafeTitle" xml:space="preserve">
    <value>Safe</value>
  </data>
  <data name="ChangeDependencyRiskStatus_FixedTitle" xml:space="preserve">
    <value>Fixed</value>
  </data>
  <data name="Synchronizer_Failure" xml:space="preserve">
    <value>Failed to synchronize server issues: {0}.</value>
  </data>
  <data name="DependencyRiskStatusChangeFailedTitle" xml:space="preserve">
    <value>Dependency Risk Status Change Failed</value>
  </data>
  <data name="DependencyRiskStatusChangeError" xml:space="preserve">
    <value>An error occurred when changing the status.</value>
  </data>
  <data name="DependencyRiskNullTransitionError" xml:space="preserve">
    <value>Cannot change status: transition is not specified</value>
  </data>
  <data name="Synchronizer_NotInConnectedMode" xml:space="preserve">
    <value>Unable to fetch server issues: not in connected mode.</value>
  </data>
  <data name="Synchronizer_SLCoreNotReady" xml:space="preserve">
    <value>Unable to fetch server issues: SLCore backend is not available.</value>
  </data>
  <data name="Synchronizer_NumberOfTaintIssues" xml:space="preserve">
    <value>Fetched {0} taint vulnerabilities.</value>
  </data>
  <data name="Synchronizer_NumberOfDependencyRisks" xml:space="preserve">
    <value>Fetched {0} dependency risks.</value>
  </data>
  <data name="Synchronizer_Verbose_ConfigScopeNotReady" xml:space="preserve">
    <value>Configuration scope root hasn't been initialized...</value>
  </data>
  <data name="Synchronizer_Verbose_AlreadyInitialized" xml:space="preserve">
    <value>Storage has already been initialized for current configuration scope</value>
  </data>
  <data name="Synchronizer_LogContext_General" xml:space="preserve">
    <value>Server Issue Sync</value>
  </data>
  <data name="Synchronizer_LogContext_Taint" xml:space="preserve">
    <value>Taint</value>
  </data>
  <data name="LogContext_DependencyRisks" xml:space="preserve">
    <value>Dependency Risks</value>
  </data>
  <data name="LogContext_ShowInBrowser" xml:space="preserve">
    <value>Show in Browser</value>
  </data>
  <data name="LogContext_ChangeStatus" xml:space="preserve">
    <value>Change Status</value>
  </data>
  <data name="ShowDependencyRisk_Error_ShowingInBrowser" xml:space="preserve">
    <value>Error when showing dependency risk in browser: {0}</value>
  </data>
  <data name="ChangeDependencyRisk_Error_ChangingStatus" xml:space="preserve">
    <value>Error when changing dependency risk status: {0}</value>
  </data>
  <data name="ResolutionFilter_Resolved" xml:space="preserve">
    <value>Resolved</value>
  </data>
  <data name="ResolutionFilter_Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="ServerHotspotTooltip" xml:space="preserve">
    <value>{0} security hotspot existing on {1}</value>
  </data>
  <data name="LocalHotspotTooltip" xml:space="preserve">
    <value>{0} security hotspot that does not exist on the server.</value>
  </data>
</root>