<Window
    x:Class=" SonarLint.VisualStudio.IssueVisualization.Security.ReviewStatus.ChangeStatusWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:security="clr-namespace:SonarLint.VisualStudio.IssueVisualization.Security"
    mc:Ignorable="d"
    WindowStartupLocation="CenterOwner"
    xmlns:resx="clr-namespace:SonarLint.VisualStudio.IssueVisualization.Security"
    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:wpf="clr-namespace:SonarLint.VisualStudio.Core.WPF;assembly=SonarLint.VisualStudio.Core"
    x:Name="ReviewHotspotWindowName"
    Title="{x:Static security:Resources.ReviewHotspotWindow_Title}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/SonarLint.VisualStudio.ConnectedMode;component/UI/Resources/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <wpf:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" FalseValue="Collapsed" TrueValue="Visible" />

            <Style x:Key="ChangeIssueStatusWithHandlerBorderStyle" TargetType="Border"
                   BasedOn="{StaticResource ChangeIssueStatusBorderStyle}">
                <EventSetter Event="MouseLeftButtonDown" Handler="Border_MouseDown" />
            </Style>

            <Style x:Key="FormattingHelpBlock" TargetType="TextBlock"
                   BasedOn="{StaticResource ChangeIssueStatusLabelStyle}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.CaptionTextKey}}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
            </Style>
            <Style x:Key="CommentTextStyle" TargetType="TextBox">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Height" Value="60" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Width" Value="500" />
                <Setter Property="AcceptsReturn" Value="True" />
                <Setter Property="AcceptsTab" Value="True" />
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.CaptionTextKey}}" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource ChangeIssueStatusWindowStyle}" />
    </Window.Style>

    <Grid Margin="10" DataContext="{Binding ElementName=ReviewHotspotWindowName, Path=ViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ListBox Grid.Row="0" ItemsSource="{Binding AllowedStatusViewModels}"
                 SelectedItem="{Binding Path=SelectedStatusViewModel}"
                 Style="{StaticResource ChangeIssueStatusListBoxStyle}"
                 ItemContainerStyle="{StaticResource NoSelectionListBoxItemStyle}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border Style="{StaticResource ChangeIssueStatusWithHandlerBorderStyle}" Margin="0,5">
                        <Grid MaxWidth="{Binding ElementName=ReviewHotspotWindowName, Path=ActualWidth}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <RadioButton Grid.Row="0" GroupName="StatusGroup" Content="{Binding Path=Title}"
                                         Style="{StaticResource ChangeIssueStatusRadioButtonStyle}"
                                         IsChecked="{Binding IsChecked}" Checked="RadioButton_OnChecked" />
                            <TextBlock Grid.Row="1" Text="{Binding Path=Description}"
                                       Style="{StaticResource ChangeIssueStatusLabelStyle}" />
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid Grid.Row="1" Margin="0, 10" HorizontalAlignment="Center" 
              Visibility="{Binding Path=ShowComment, Converter={StaticResource TrueToVisibleConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Text="{x:Static resx:Resources.ChangeStatusWindow_CommentLabel}"
                       Style="{StaticResource ChangeIssueStatusLabelStyle}"
                       Margin="0, 0,0,2" />
            <TextBox Grid.Row="1" Text="{Binding Path=Comment, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource CommentTextStyle}"
                     Margin="0" />
            <TextBlock Grid.Row="2" Style="{StaticResource FormattingHelpBlock}"
                       Margin="0, 2,0,0">
                <Hyperlink Name="FormattingHelpHyperlink" NavigateUri=""
                           RequestNavigate="FormattingHelpHyperlink_RequestNavigate">
                    <Run Text="{x:Static resx:Resources.ChangeStatusWindow_FormattingHelpLink}" />
                </Hyperlink>
                <Run Text="{x:Static resx:Resources.ChangeStatusWindow_FormattingHelpExamples}" />
            </TextBlock>
        </Grid>

        <Grid Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" IsDefault="True"
                    Content="{x:Static security:Resources.ReviewHotspotWindow_SubmitButton}"
                    IsEnabled="{Binding Path=IsSubmitButtonEnabled, Mode=OneWay}" Click="Submit_Click" />
            <Button Grid.Column="1" IsCancel="True"
                    Content="{x:Static security:Resources.ReviewHotspotWindow_CancelButton}" />
        </Grid>
    </Grid>
</Window>