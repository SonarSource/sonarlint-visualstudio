//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SonarLint.VisualStudio.IssueVisualization.OpenInIde {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class OpenInIdeResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal OpenInIdeResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SonarLint.VisualStudio.IssueVisualization.OpenInIde.OpenInIdeResources", typeof(OpenInIdeResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Open in IDE] Unable to convert issue data: {0}.
        /// </summary>
        internal static string Converter_UnableToConvertIssueData {
            get {
                return ResourceManager.GetString("Converter_UnableToConvertIssueData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not handle Open in IDE request. See the Logs for more information..
        /// </summary>
        internal static string DefaultInfoBarMessage {
            get {
                return ResourceManager.GetString("DefaultInfoBarMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Open in IDE] Done processing request for issue Key: {0}.
        /// </summary>
        internal static string DoneProcessingRequest {
            get {
                return ResourceManager.GetString("DoneProcessingRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid navigation result.
        /// </summary>
        internal static string Exception_InvalidNavigationResult {
            get {
                return ResourceManager.GetString("Exception_InvalidNavigationResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Open in IDE] Could not find the location at File: {0}, Start Line: {1}, Start Position: {2}.
        /// </summary>
        internal static string IssueLocationNotFound {
            get {
                return ResourceManager.GetString("IssueLocationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to process Open in IDE request. Reason: {0}.
        /// </summary>
        internal static string Notification_InvalidConfiguration {
            get {
                return ResourceManager.GetString("Notification_InvalidConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in IDE. Could not locate the issue in the file. Please ensure the file ({0}) has not been modified..
        /// </summary>
        internal static string Notification_UnableToLocateIssue {
            get {
                return ResourceManager.GetString("Notification_UnableToLocateIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in IDE. Could not open File: {0}. Please ensure that you&apos;re on the correct branch and the file has not been deleted locally..
        /// </summary>
        internal static string Notification_UnableToOpenFile {
            get {
                return ResourceManager.GetString("Notification_UnableToOpenFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Open in IDE] Processing request. Configuration scope: {0}, Key: {1}, Type: {2}.
        /// </summary>
        internal static string ProcessingRequest {
            get {
                return ResourceManager.GetString("ProcessingRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Open in IDE] Configuration scope mismatch: Active scope {0} is different from received {1}.
        /// </summary>
        internal static string Validation_ConfigurationScopeMismatch {
            get {
                return ResourceManager.GetString("Validation_ConfigurationScopeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Open in IDE] Configuration scope is not bound.
        /// </summary>
        internal static string Validation_ConfigurationScopeNotBound {
            get {
                return ResourceManager.GetString("Validation_ConfigurationScopeNotBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Open in IDE] Configuration scope root path is not available.
        /// </summary>
        internal static string Validation_ConfigurationScopeRootNotSet {
            get {
                return ResourceManager.GetString("Validation_ConfigurationScopeRootNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal configuration mismatch.
        /// </summary>
        internal static string ValidationReason_ConfigurationMismatch {
            get {
                return ResourceManager.GetString("ValidationReason_ConfigurationMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal filesystem configuration failure.
        /// </summary>
        internal static string ValidationReason_FilePathRootNotSet {
            get {
                return ResourceManager.GetString("ValidationReason_FilePathRootNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Malformed request.
        /// </summary>
        internal static string ValidationReason_MalformedRequest {
            get {
                return ResourceManager.GetString("ValidationReason_MalformedRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected Mode has not been set up.
        /// </summary>
        internal static string ValidationReason_StandaloneMode {
            get {
                return ResourceManager.GetString("ValidationReason_StandaloneMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid issue format.
        /// </summary>
        internal static string ValidationReason_UnableToConvertIssue {
            get {
                return ResourceManager.GetString("ValidationReason_UnableToConvertIssue", resourceCulture);
            }
        }
    }
}
